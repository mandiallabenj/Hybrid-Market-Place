<?php

/*
All methods that the project file entity uses
*/


namespace App\Controller;

use App\Entity\Project;
use App\Entity\Projectfiles;
use App\Form\ProjectFileType;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\File\Exception\FileException;


class ProjectFileController extends AbstractController {

    /**
     * shows project file
     * @Route("/project/file", name="project_file")
     */
    public function index() {
        return $this->render('project_file/index.html.twig', [
                    'controller_name' => 'ProjectFileController',
        ]);
    }

    /**
     * upload files for unique project
     * @Route("/project/upload/{id}/file" ,name="project_upload_file") 
     */
    public function projectfileupload(Request $request, $id) {


        // Total Number of Files By Project

        $numberOffilesByProject = $this->getDoctrine()->getRepository(Projectfiles::class)->findNumberOffilesByProject($id);

        // Fetch Files By Project
        $projectfile = $this->getDoctrine()->getRepository(Projectfiles::class)->findAllfilesByProject($id);
        

        $project = $this->getDoctrine()->getRepository(Project::class)->findOneProject($id);

        $this->denyAccessUnlessGranted('ROLE_USER');
        $user = $this->getUser();

        //projectfiles object 
        $projectfiles = new Projectfiles();

        $form = $this->createForm(ProjectFileType::class, $projectfiles);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $projectfile */
            $file = $form->get('projectfile')->getData();

            $projectfileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

            // Move the file to the directory where brochures are stored
            try {
                $file->move(
                        $this->getParameter('project_file_directory'), $projectfileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }


            $projectfiles->setProjectfile($projectfileName);


            //$projectfilesize = $form->get('projectfile')->getData();
            //$projectfilesizeofsize = $this->$projectfilesize->getSize();

            $projectfiles->setCreatedAt(new \DateTime('now'));
            $projectfiles->setproject($project);
            //$projectfiles->setProjectFileSize($projectfilesizeofsize);
            $projectfiles->setUser($user);

            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($projectfiles);
            $entityManager->flush();

            $this->addFlash('success', 'Your File Was Uploaded!');
            
            return $this->redirectToRoute('user_projects');

        }

        return $this->render('project/projectfilesupload.html.twig', [
                    'project' => $project,
                    'projectfile' => $projectfile,
                    'numberOffilesByProject' => $numberOffilesByProject,
                    'form' => $form->createView(),
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName() {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

}
